<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mic带你学架构</title>
  <icon>https://istio.tech/icon.png</icon>
  <subtitle>Mic带你学架构</subtitle>
  <link href="https://istio.tech/atom.xml" rel="self"/>
  
  <link href="https://istio.tech/"/>
  <updated>2021-10-24T08:45:55.035Z</updated>
  <id>https://istio.tech/</id>
  
  <author>
    <name>Mic带你学架构</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>想要彻底搞懂大厂是如何实现Redis高可用的？看这篇文章就够了！(1.2W字，建议收藏）</title>
    <link href="https://istio.tech/posts/1429145604/"/>
    <id>https://istio.tech/posts/1429145604/</id>
    <published>2021-10-24T08:40:00.000Z</published>
    <updated>2021-10-24T08:45:55.035Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;高可用HA（High</summary>
        
      
    
    
    
    <category term="Redis" scheme="https://istio.tech/categories/Redis/"/>
    
    
    <category term="Redis" scheme="https://istio.tech/tags/Redis/"/>
    
    <category term="高可用" scheme="https://istio.tech/tags/%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    
    <category term="Redis高可用设计" scheme="https://istio.tech/tags/Redis%E9%AB%98%E5%8F%AF%E7%94%A8%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="Codis" scheme="https://istio.tech/tags/Codis/"/>
    
    <category term="Redis Cluster" scheme="https://istio.tech/tags/Redis-Cluster/"/>
    
  </entry>
  
  <entry>
    <title>深度剖析Redis6的持久化机制（大量图片说明，简洁易懂）</title>
    <link href="https://istio.tech/posts/2542151685/"/>
    <id>https://istio.tech/posts/2542151685/</id>
    <published>2021-10-24T08:33:00.000Z</published>
    <updated>2021-10-24T08:38:24.815Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Redis的强劲性能很大程度上是由于它所有的数据都存储在内存中，当然如果redis重启或者服务器故障导致redis重启，所有存储在内存中的数据就会丢失。但是在某些情况下，我们希望Redis在重启后能够保证数据不会丢失。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;将redis作为nos</summary>
        
      
    
    
    
    <category term="Redis" scheme="https://istio.tech/categories/Redis/"/>
    
    <category term="高性能" scheme="https://istio.tech/categories/Redis/%E9%AB%98%E6%80%A7%E8%83%BD/"/>
    
    
    <category term="Redis" scheme="https://istio.tech/tags/Redis/"/>
    
    <category term="Redis持久化" scheme="https://istio.tech/tags/Redis%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>时间轮机制在Redisson分布式锁中的实际应用以及时间轮源码分析</title>
    <link href="https://istio.tech/posts/1553902520/"/>
    <id>https://istio.tech/posts/1553902520/</id>
    <published>2021-10-24T08:30:00.000Z</published>
    <updated>2021-10-24T08:33:38.163Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本篇文章主要基于Redisson中实现的分布式锁机制继续进行展开，分析Redisson中的时间轮机制。&lt;/p&gt;
&lt;p&gt;在前面分析的Redisson的分布式锁实现中，有一个Watch Dog机制来对锁键进行续约，代码如下:&lt;/p&gt;
&lt;figure</summary>
        
      
    
    
    
    <category term="Redis" scheme="https://istio.tech/categories/Redis/"/>
    
    
    <category term="Redis" scheme="https://istio.tech/tags/Redis/"/>
    
    <category term="Redisson" scheme="https://istio.tech/tags/Redisson/"/>
    
    <category term="时间轮" scheme="https://istio.tech/tags/%E6%97%B6%E9%97%B4%E8%BD%AE/"/>
    
    <category term="Redisson分布式锁" scheme="https://istio.tech/tags/Redisson%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
    
  </entry>
  
  <entry>
    <title>从源码层面深度剖析Redisson实现分布式锁的原理（全程干货，注意收藏）</title>
    <link href="https://istio.tech/posts/1208754375/"/>
    <id>https://istio.tech/posts/1208754375/</id>
    <published>2021-10-24T08:24:00.000Z</published>
    <updated>2021-10-24T08:30:06.581Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Redis的使用场景很多，本篇文章主要给大家分享一下Redis实现分布式锁机制的原理。&lt;/p&gt;
&lt;p&gt;下面通过Redisson框架封装的分布式锁机制，来演示一下分布式锁的实现。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;引入redisson依赖&lt;/p&gt;
&lt;figure</summary>
        
      
    
    
    
    <category term="Redis" scheme="https://istio.tech/categories/Redis/"/>
    
    
    <category term="Redis" scheme="https://istio.tech/tags/Redis/"/>
    
    <category term="Redisson" scheme="https://istio.tech/tags/Redisson/"/>
    
    <category term="分布式锁" scheme="https://istio.tech/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
    
    <category term="Redis应用实战" scheme="https://istio.tech/tags/Redis%E5%BA%94%E7%94%A8%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>Redis使用过程中有哪些注意事项？缓存雪崩？缓存一致性？</title>
    <link href="https://istio.tech/posts/2137391109/"/>
    <id>https://istio.tech/posts/2137391109/</id>
    <published>2021-10-24T08:16:00.000Z</published>
    <updated>2021-10-24T08:24:06.765Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Redis使用起来很简单，但是在实际应用过程中，一定会碰到一些比较麻烦的问题，常见的问题有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;redis和数据库数据的一致性&lt;/li&gt;
&lt;li&gt;缓存雪崩&lt;/li&gt;
&lt;li&gt;缓存穿透&lt;/li&gt;
&lt;li&gt;热点数据发现&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面逐一</summary>
        
      
    
    
    
    <category term="Redis" scheme="https://istio.tech/categories/Redis/"/>
    
    
    <category term="Redis" scheme="https://istio.tech/tags/Redis/"/>
    
    <category term="布隆过滤器" scheme="https://istio.tech/tags/%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    
    <category term="缓存穿透" scheme="https://istio.tech/tags/%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F/"/>
    
    <category term="缓存一致性" scheme="https://istio.tech/tags/%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7/"/>
    
    <category term="缓存雪崩" scheme="https://istio.tech/tags/%E7%BC%93%E5%AD%98%E9%9B%AA%E5%B4%A9/"/>
    
  </entry>
  
  <entry>
    <title>盘点一下Redis中常用的Java客户端,或者咱们手写一个？</title>
    <link href="https://istio.tech/posts/1921857783/"/>
    <id>https://istio.tech/posts/1921857783/</id>
    <published>2021-10-24T08:11:00.000Z</published>
    <updated>2021-10-24T08:16:30.444Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;我们要在Java中操作Redis，怎么做呢？首先我们先来了解一下Redis Serialization</summary>
        
      
    
    
    
    <category term="Redis" scheme="https://istio.tech/categories/Redis/"/>
    
    
    <category term="Redis" scheme="https://istio.tech/tags/Redis/"/>
    
    <category term="Redis Java" scheme="https://istio.tech/tags/Redis-Java/"/>
    
    <category term="手写Redis客户端" scheme="https://istio.tech/tags/%E6%89%8B%E5%86%99Redis%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>图解Redis6中的9种数据结构，墙裂建议准备去面试的人先看（干货，建议收藏）</title>
    <link href="https://istio.tech/posts/2848818622/"/>
    <id>https://istio.tech/posts/2848818622/</id>
    <published>2021-10-24T07:49:00.000Z</published>
    <updated>2021-10-24T07:53:26.745Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;如图所示，Redis中提供了9种不同的数据操作类型，他们分别代表了不同的数据存储结构。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://mic-blob-bucket.oss-cn-beijing.aliyuncs.com/202110131450348.png&quot;</summary>
        
      
    
    
    
    <category term="Redis" scheme="https://istio.tech/categories/Redis/"/>
    
    
    <category term="Redis" scheme="https://istio.tech/tags/Redis/"/>
    
    <category term="数据结构" scheme="https://istio.tech/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="Redis存储原理" scheme="https://istio.tech/tags/Redis%E5%AD%98%E5%82%A8%E5%8E%9F%E7%90%86/"/>
    
    <category term="Redis应用场景" scheme="https://istio.tech/tags/Redis%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/"/>
    
  </entry>
  
  <entry>
    <title>从网络通信的演进过程彻底搞懂Redis高性能通信的原理（全网最详细，建议收藏）</title>
    <link href="https://istio.tech/posts/3231701875/"/>
    <id>https://istio.tech/posts/3231701875/</id>
    <published>2021-10-24T07:41:00.000Z</published>
    <updated>2021-10-24T07:45:32.512Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;我们一直说Redis的性能很快，那为什么快？Redis为了达到性能最大化，做了哪些方面的优化呢？&lt;br&gt;在&lt;a</summary>
        
      
    
    
    
    <category term="Redis" scheme="https://istio.tech/categories/Redis/"/>
    
    <category term="NIO多路复用" scheme="https://istio.tech/categories/Redis/NIO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/"/>
    
    
    <category term="Redis" scheme="https://istio.tech/tags/Redis/"/>
    
    <category term="NIO" scheme="https://istio.tech/tags/NIO/"/>
    
    <category term="高性能网络通信" scheme="https://istio.tech/tags/%E9%AB%98%E6%80%A7%E8%83%BD%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/"/>
    
    <category term="Redis多路复用" scheme="https://istio.tech/tags/Redis%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>字节跳动二面！面试官直接问我生产环境下如何监控线程池？还好我看了这篇文章！</title>
    <link href="https://istio.tech/posts/3554467934/"/>
    <id>https://istio.tech/posts/3554467934/</id>
    <published>2021-10-24T07:36:00.000Z</published>
    <updated>2021-10-24T07:39:58.906Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;线程池的监控很重要，对于前面章节讲的动态参数调整，其实还是得依赖于线程池监控的数据反馈之后才能做出调整的决策。还有就是线程池本身的运行过程对于我们来说像一个黑盒，我们没办法了解线程池中的运行状态时，出现问题没有办法及时判断和预警。&lt;/p&gt;
&lt;p&gt;对于监控这类的场景，核心逻辑</summary>
        
      
    
    
    
    
    <category term="线程池" scheme="https://istio.tech/tags/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
    <category term="Spring Boot" scheme="https://istio.tech/tags/Spring-Boot/"/>
    
    <category term="监控" scheme="https://istio.tech/tags/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>1万字长文高速你千万级并发架构下如何提高数据库存储性能</title>
    <link href="https://istio.tech/posts/4032676932/"/>
    <id>https://istio.tech/posts/4032676932/</id>
    <published>2021-10-19T07:54:00.000Z</published>
    <updated>2021-10-24T08:07:15.322Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;如图所示，表示发起一个请求时，涉及到数据库的相关操作，在前面的文章中我们说过，如果服务端要提升整体的吞吐量，就必须要减少每一次请求的处理时长，那么在当前这个场景中，数据库层面哪些因素会影响到性能呢？&lt;/p&gt;
&lt;img</summary>
        
      
    
    
    
    <category term="数据库" scheme="https://istio.tech/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="架构" scheme="https://istio.tech/tags/%E6%9E%B6%E6%9E%84/"/>
    
    <category term="高性能" scheme="https://istio.tech/tags/%E9%AB%98%E6%80%A7%E8%83%BD/"/>
    
    <category term="并发" scheme="https://istio.tech/tags/%E5%B9%B6%E5%8F%91/"/>
    
    <category term="数据库优化" scheme="https://istio.tech/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96/"/>
    
    <category term="性能调优" scheme="https://istio.tech/tags/%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/"/>
    
  </entry>
  
  <entry>
    <title>工作3年的Java程序员，轻松拿到阿里P6Offer，只因为他搞明白了Redis这几个问题！！</title>
    <link href="https://istio.tech/posts/2781994300/"/>
    <id>https://istio.tech/posts/2781994300/</id>
    <published>2021-10-19T04:36:00.000Z</published>
    <updated>2021-10-24T07:30:49.223Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Redis中的多路复用模型&quot;&gt;&lt;a href=&quot;#Redis中的多路复用模型&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="Redis" scheme="https://istio.tech/categories/Redis/"/>
    
    
    <category term="高并发" scheme="https://istio.tech/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
    <category term="面试题" scheme="https://istio.tech/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="Redis" scheme="https://istio.tech/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>阿里P8面试官：如何设计一个扛住千万级并发的架构（超级详细）-续</title>
    <link href="https://istio.tech/posts/2734400627/"/>
    <id>https://istio.tech/posts/2734400627/</id>
    <published>2021-10-18T14:20:00.000Z</published>
    <updated>2021-10-24T07:27:21.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在上一篇文章中，详细分析了设计一个千万级并发架构所需要思考的问题，以及解决方案。&lt;br&gt;在这一片文章中，我们主要分析如何在职场足够用户数量的情况下，同步提升架构的性能降低平均响应时间。&lt;/p&gt;
&lt;h1 id=&quot;如何降低RT的值&quot;&gt;&lt;a href=&quot;#如何降低RT的值&quot;</summary>
        
      
    
    
    
    
    <category term="高并发" scheme="https://istio.tech/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
    <category term="架构设计" scheme="https://istio.tech/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="面试题" scheme="https://istio.tech/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>阿里P8面试官：如何设计一个扛住千万级并发的架构？</title>
    <link href="https://istio.tech/posts/1568521894/"/>
    <id>https://istio.tech/posts/1568521894/</id>
    <published>2021-10-18T14:09:00.000Z</published>
    <updated>2021-10-24T07:22:01.585Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;大家先思考一个问题，这也是在面试过程中经常遇到的问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你们公司现在的产品能够支持10W用户访问，你们老板突然和你说，融到钱了，会大量投放广告，预计在1个月后用户量会达到1000W，如果这个任务交给你，你应该怎么做？&lt;/p&gt;
&lt;/</summary>
        
      
    
    
    
    <category term="架构设计" scheme="https://istio.tech/categories/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="高并发" scheme="https://istio.tech/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
    <category term="架构设计" scheme="https://istio.tech/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://istio.tech/posts/1243066710/"/>
    <id>https://istio.tech/posts/1243066710/</id>
    <published>2021-06-18T14:09:00.000Z</published>
    <updated>2021-10-24T07:34:09.425Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt;</summary>
        
      
    
    
    
    
  </entry>
  
</feed>
